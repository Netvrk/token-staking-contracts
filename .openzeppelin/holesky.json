{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x451a9A54aAD00aABbCCA220C15616B904B6a921D",
      "txHash": "0x05c70d89ba736c866349b71b5f467baa621306daef69cc9533986ab5c6bb8246",
      "kind": "uups"
    }
  ],
  "impls": {
    "2f3e8af001525760bc5bce019024545bb1b96cbcb7b9f8af7db7cb8554953016": {
      "address": "0x823aF807a0A7E8b01e9F32A736E04FC581E38EA7",
      "txHash": "0x83d554481fc9221de61136e5350a69aea0ef7abe483847517294c4eb80c537b9",
      "layout": {
        "solcVersion": "0.8.24",
        "storage": [
          {
            "label": "merkleRoot",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32",
            "contract": "Staking",
            "src": "contracts\\Staking.sol:66"
          },
          {
            "label": "stakingToken",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC20)2914",
            "contract": "Staking",
            "src": "contracts\\Staking.sol:68"
          },
          {
            "label": "stakingProgramIds",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "Staking",
            "src": "contracts\\Staking.sol:70"
          },
          {
            "label": "stakingPrograms",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_uint256,t_struct(StakingProgram)3985_storage)",
            "contract": "Staking",
            "src": "contracts\\Staking.sol:72"
          },
          {
            "label": "userStakes",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(UserStake)3960_storage)dyn_storage))",
            "contract": "Staking",
            "src": "contracts\\Staking.sol:74"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)24_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)34_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)312_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)158_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)532_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)24_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(UserStake)3960_storage)dyn_storage": {
            "label": "struct Staking.UserStake[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)2914": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_array(t_struct(UserStake)3960_storage)dyn_storage))": {
            "label": "mapping(address => mapping(uint256 => struct Staking.UserStake[]))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(UserStake)3960_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct Staking.UserStake[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakingProgram)3985_storage)": {
            "label": "mapping(uint256 => struct Staking.StakingProgram)",
            "numberOfBytes": "32"
          },
          "t_struct(StakingProgram)3985_storage": {
            "label": "struct Staking.StakingProgram",
            "members": [
              {
                "label": "duration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "apyRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minStaking",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxStaking",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "start",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "end",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "totalStaked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "staked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "totalUsers",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "totalRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "pendingRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "claimedRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(UserStake)3960_storage": {
            "label": "struct Staking.UserStake",
            "members": [
              {
                "label": "staked",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stakedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "reward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "claimed",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimedAt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:38",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:42",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:45",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:40",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)24_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
